name: Build TS3AudioBot

on:
  push:
    branches: [ "master", "develop" ]
    tags: [ '*' ]

jobs:
  build_frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout  
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: |
          cd WebInterface
          yarn install --frozen-lockfile

      - name: Build WebInterface
        run: |
          cd WebInterface
          yarn run build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: webinterface
          path: WebInterface/dist

  publish:
    needs: [ build_frontend ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rid: [ "linux-x64", "linux-arm", "linux-arm64", "win-x64" ]

    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'recursive'

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Test
        run: dotnet test -c Release --verbosity normal

      - name: Publish
        run: |
          dotnet publish TS3AudioBot/TS3AudioBot.csproj \
            -c Release \
            --framework net9.0 \
            --runtime ${{ matrix.rid }} \
            -o publish

      - name: Fetch WebInterface
        uses: actions/download-artifact@v4
        with:
          name: webinterface
          path: publish/WebInterface

      - name: Prepare ZIP
        run: |
          cd publish
          zip -r ../ts3audiobot-${{ matrix.rid }}.zip .
        shell: bash

      - name: Upload ZIP artifact
        uses: actions/upload-artifact@v4
        with:
          name: ts3audiobot-${{ matrix.rid }}.zip
          path: ts3audiobot-${{ matrix.rid }}.zip
  
  
  release:
    needs: [ publish ]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Fetch Linux x64 artifact
        uses: actions/download-artifact@v4
        with:
          name: ts3audiobot-linux-x64.zip
          path: .
      - name: Fetch Linux ARM artifact
        uses: actions/download-artifact@v4
        with:
          name: ts3audiobot-linux-arm.zip
          path: .
      - name: Fetch Linux ARM64 artifact
        uses: actions/download-artifact@v4
        with:
          name: ts3audiobot-linux-arm64.zip
          path: .
      - name: Fetch Windows x64 artifact
        uses: actions/download-artifact@v4
        with:
          name: ts3audiobot-win-x64.zip
          path: .

      - name: Create release
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          files: |
            ts3audiobot-win-x64.zip
            ts3audiobot-linux-arm64.zip
            ts3audiobot-linux-arm.zip
            ts3audiobot-linux-x64.zip
